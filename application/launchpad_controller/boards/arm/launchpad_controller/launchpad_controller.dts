/*
 * Copyright (c) 2020 Alexander Kozhinov <AlexanderKozhinov@yandex.com>
 * SPDX-License-Identifier: Apache-2.0
 */

 /dts-v1/;
 #include <st/h7/stm32h723Xg.dtsi>
 #include <st/h7/stm32h723zgtx-pinctrl.dtsi>
 #include <zephyr/dt-bindings/input/input-event-codes.h>

 /*
  * WARNING:
  * JP6 and SB72 must be ON when using Ethernet.
  */

 / {
	 model = "AESIR Surtr Launchpad Controller";
	 compatible = "aesir,surtr";

	 chosen {
		 zephyr,console = &usart3;
		 zephyr,shell-uart = &usart3;
		 zephyr,dtcm = &dtcm;
		 zephyr,sram = &sram0;
		 zephyr,flash = &flash0;
	 };

	leds: leds {
		compatible = "gpio-leds";
		nled24_2: led_0 {
			gpios = <&gpiof 1 GPIO_ACTIVE_HIGH>;
			label = "User LD2, nLED24_2";
		};

		nled24_1: led_1 {
			gpios = <&gpiof 0 GPIO_ACTIVE_HIGH>;
			label = "User LD1, nLED24_1";
		};

		sw1: sw_1 {
			gpios = <&gpioe 6 GPIO_ACTIVE_HIGH>;
			label = "Switch 1";
		};

		sw2: sw_2 {
			gpios = <&gpioc 13 GPIO_ACTIVE_HIGH>;
			label = "Switch 2";
		};

		sw3: sw_3 {
			gpios = <&gpioc 14 GPIO_ACTIVE_HIGH>;
			label = "Switch 3";
		};

		sw4: sw_4 {
			gpios = <&gpioc 15 GPIO_ACTIVE_HIGH>;
			label = "Switch 4";
		};

		sw5: sw_5 {
			gpios = <&gpiod 8 GPIO_ACTIVE_HIGH>;
			label = "Switch 5";
		};

		sw6: sw_6 {
			gpios = <&gpiod 9 GPIO_ACTIVE_HIGH>;
			label = "Switch 6";
		};

		sw7: sw_7 {
			gpios = <&gpiod 10 GPIO_ACTIVE_HIGH>;
			label = "Switch 7";
		};

		sw8: sw_8 {
			gpios = <&gpiod 11 GPIO_ACTIVE_HIGH>;
			label = "Switch 8";
		};
	};

	stepctrls: stepper_controls {
		compatible = "gpio-leds";
		step1_dir: stepper1_direction {
			gpios = <&gpiog 6 GPIO_ACTIVE_HIGH>;
			label = "Stepper Motor 1 Direction Pin";
		};
		step2_dir: stepper2_direction {
			gpios = <&gpiod 15 GPIO_ACTIVE_HIGH>;
			label = "Stepper Motor 2 Direction Pin";
		};
		step3_dir: stepper3_direction {
			gpios = <&gpiod 4 GPIO_ACTIVE_HIGH>;
			label = "Stepper Motor 3 Direction Pin";
		};
		
		step1_ctrl: stepper1_control {
			gpios = <&gpiog 5 GPIO_ACTIVE_HIGH>;
			label = "Stepper Motor 1 Control Pin";
		};
		step2_ctrl: stepper2_control {
			gpios = <&gpiod 14 GPIO_ACTIVE_HIGH>;
			label = "Stepper Motor 2 Control Pin";
		};
		step3_ctrl: stepper3_control {
			gpios = <&gpiod 3 GPIO_ACTIVE_HIGH>;
			label = "Stepper Motor 3 Control Pin";
		};
	};

	aliases {
		// led0 = &nled24_1;
		led0 = &nled24_2;
		// led0 = &sw1;
		// led1 = &nled24_2;
		led1 = &nled24_1;
		switch1 = &sw1;
		switch2 = &sw2;
		switch3 = &sw3;
		switch4 = &sw4;
	};
 };

 &clk_lsi {
	 status = "okay";
 };

 &clk_hsi {
	hsi-div = <1>;
	status = "okay";
};

 &clk_hsi48 {
	 status = "okay";
 };

 &clk_hse {
	//  hse-bypass;
	 clock-frequency = <DT_FREQ_M(50)>; /* onboard 50MHz clock */
	 status = "okay";
 };

//  &clk_lse {
// 	 status = "disabled";
//  };

// TRACECLK is probably clocked by div-r, so let's set it to 16 MHz 
 &pll {
	 div-m = <32>;
	 mul-n = <275>;
	 div-p = <1>;
	 div-q = <11>;
	 div-r = <2>; //32 MHz 
	 clocks = <&clk_hsi>;
	 status = "okay";
 };

// TODO: fix according to
&rcc {
	clocks = <&pll>;
	clock-frequency = <DT_FREQ_M(550)>;
	d1cpre = <1>;
	hpre = <2>;    /* HCLK: 275   MHz */
	d1ppre = <2>;  /* APB1: 137.5 MHz */
	d2ppre1 = <2>; /* APB2: 137.5 MHz */
	d2ppre2 = <2>; /* APB3: 137.5 MHz */
	d3ppre = <2>;  /* APB4: 137.5 MHz */
};

// &usart3 {
// 	pinctrl-0 = <&usart3_tx_pd8 &usart3_rx_pd9>;
// 	pinctrl-names = "default";
// 	current-speed = <115200>;
// 	status = "okay";
// };

// &usart2 {
// 	pinctrl-0 = <&usart2_tx_pd5 &usart2_rx_pd6>;
// 	pinctrl-names = "default";
// 	current-speed = <115200>;
// 	status = "okay";
// };


// /* TODO: can't use USART1! Check CubeMX and fix */
// &usart1 {
// 	pinctrl-0 = <&usart1_tx_pb14 &usart1_rx_pb7>;
// 	pinctrl-names = "default";
// 	current-speed = <115200>;
// 	status = "okay";
// };


&rtc {
	clocks = <&rcc STM32_CLOCK_BUS_APB4 0x00010000>,
		 <&rcc STM32_SRC_LSI RTC_SEL(2)>;
	status = "okay";
};

// spi1 is for the ADCs
// ADC1_CS on PE11, ADC2_CS on PE12
&spi1 {
    // compatible = "zephyr,spi-emul-controller";
    // compatible = "spi-device"
    status = "okay";
	pinctrl-0 = <&spi1_sck_pa5 &spi1_miso_pa6 &spi1_mosi_pa7>;
	pinctrl-names = "default";
    cs-gpios = <&gpioe 11 GPIO_ACTIVE_LOW>,
               <&gpioe 12 GPIO_ACTIVE_LOW>;

    ext_adc1: ad4111_d@0 {
		compatible = "analog,ad4111";
        status = "okay";
        reg = <0>;
        spi-max-frequency = <10000000>;
    };

    ext_adc2: ad4111_d@1 {
		compatible = "analog,ad4111";
        status = "okay";
        reg = <1>;
        spi-max-frequency = <10000000>;
    };
};

// // spi3 is for the stepper drivers
// // MOTOR1_SCS on PE8 MOTOR2_SCS on PE9 MOTOR3_SCS on PE10 
// &spi3 {
// 	status = "okay";
// 	pinctrl-0 = <&spi3_sck_pc10 &spi1_miso_pc11 &spi1_mosi_pc12>;
// 	pinctrl-names = "default";
// 	cs-gpios = <&gpioe 8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,
// 	 <&gpioe 9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,
// 	 <&gpioe 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
	
// 	motor1 : motor36v4_1@0 {
// 		compatible="ti,drv8711";
// 		reg = <0>;
// 		spi-max-frequency=<1000000>;
// 	};

// 	motor2 : motor36v4_2@1 {
// 		compatible="ti,drv8711";
// 		reg = <1>;
// 		spi-max-frequency=<1000000>;
// 	};

// 	motor3 : motor36v4_3@2 {
// 		compatible="ti,drv8711";
// 		reg = <2>;
// 		spi-max-frequency=<1000000>;
// 	};
// };


// // spi5 is exposed on the header. can be used later, disabled for now
// &spi5 {
// 	status = "disabled";
// 	pinctrl-0 = <&spi5_sck_pf7 &spi5_miso_pf8 &spi5_mosi_pf9>;
// 	pinctrl-names = "default";
// 	cs-gpios = <&gpioe 8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,
// 	 <&gpioe 9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,
// 	 <&gpioe 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
// };


// /* checked */
// &i2c1 {
// 	pinctrl-0 = <&i2c1_scl_pb6 &i2c1_sda_pb9>;
// 	pinctrl-names = "default";
// 	status = "okay";
// 	clock-frequency = <I2C_BITRATE_FAST>;
// };

// /* checked */
// // i2c2 is exposed on the header. can be used later, disabled for now
// &i2c2 {
// 	pinctrl-0 = <&i2c2_scl_pf1 &i2c2_sda_pf0>;
// 	pinctrl-names = "default";
// 	status = "disabled";
// 	clock-frequency = <I2C_BITRATE_FAST>;
// };

// // TODO: check how to define single-ended ADC measurement
// &adc1 {
// 	pinctrl-0 = <&adc1_inp2_pf11 &adc1_inp3_pa6 &adc1_inp5_pb1 &adc1_inp6_pf11>;
// 	pinctrl-names = "default";

// 	// #address-cells = <1>;
// 	// #size-cells = <0>;
// 	// status = "okay";
// 	st,adc-clock-source = < 1 >; // TODO: review which clock source this refers to
// 	st,adc-prescaler = < 1 >;

// 	// channel@F {
// 	// 	reg = <15>; //15
// 	// 	zephyr,gain = "ADC_GAIN_1";
// 	// 	zephyr,reference = "ADC_REF_INTERNAL";
// 	// 	zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
// 	// 	zephyr,resolution = <14>;
// 	// 	zephyr,oversampling = <4>;
// 	// 	status = "okay";
// 	// };
// };

// &adc2 {
// 	pinctrl-0 = <&adc2_inp2_pf13 &adc2_inp6_pf14
// 	&adc2_inp9_pb0 &adc2_inp10_pc0
// 	&adc2_inp15_pa3 &adc2_inp18_pa4
// 	&adc2_inp19_pa5>;
// 	pinctrl-names = "default";

// 	// #address-cells = <1>;
// 	// #size-cells = <0>;
// 	// status = "okay";
// 	st,adc-clock-source = < 1 >; // TODO: review which clock source this refers to
// 	st,adc-prescaler = < 1 >;

// 	// channel@F {
// 	// 	reg = <15>; //15
// 	// 	zephyr,gain = "ADC_GAIN_1";
// 	// 	zephyr,reference = "ADC_REF_INTERNAL";
// 	// 	zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
// 	// 	zephyr,resolution = <14>;
// 	// 	zephyr,oversampling = <4>;
// 	// 	status = "okay";
// 	// };
// };

// &adc3 {
// 	// #address-cells = <1>;
// 	// #size-cells = <0>;
// 	// status = "okay";
// 	// st,adc-prescaler = <1>;

// 	// channel@F {
// 	// 	reg = <15>; //15
// 	// 	zephyr,gain = "ADC_GAIN_1";
// 	// 	zephyr,reference = "ADC_REF_INTERNAL";
// 	// 	zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
// 	// 	zephyr,resolution = <14>;
// 	// 	zephyr,oversampling = <4>;
// 	// 	status = "okay";
// 	// };
// };


// &backup_sram {
// 	status = "okay";
// };

// &timers12 {
// 	st,prescaler = <10000>;
// 	status = "okay";

// 	pwm12: pwm {
// 		status = "okay";
// 		pinctrl-0 = <&tim12_ch1_pb14>;
// 		pinctrl-names = "default";
// 	};
// };

// /* checked, looks correct */
// &mac {
// 	status = "okay";
// 	pinctrl-0 = <&eth_ref_clk_pa1
// 		     &eth_mdio_pa2
// 		     &eth_crs_dv_pa7
// 		     &eth_mdc_pc1
// 		     &eth_rxd0_pc4
// 		     &eth_rxd1_pc5
// 		     &eth_tx_en_pb11
// 		     &eth_txd0_pg13 /* TODO: POSSIBLE ERROR ON SCHEMATIC */
// 		     &eth_txd1_pg12>; /* TODO: POSSIBLE ERROR ON SCHEMATIC,could have this as pg12 */
// 	pinctrl-names = "default";
// };

// &rng {
// 	status = "okay";
// };

// /* TODO: review clocks, pins checked*/
// &fdcan1 {
// 	clocks = <&rcc STM32_CLOCK_BUS_APB1_2 0x00000200>,
// 		 <&rcc STM32_SRC_PLL1_Q FDCAN1_SEL(1)>;
// 	pinctrl-0 = <&fdcan1_rx_pa11 &fdcan1_tx_pa12>;
// 	pinctrl-names = "default";
// 	bus-speed = <125000>;
// 	bus-speed-data = <1000000>;
// 	status = "okay";
// };

// /* TODO: review clocks, pins checked*/
// &fdcan2 {
// 	clocks = <&rcc STM32_CLOCK_BUS_APB1_2 0x00000200>,
// 		 <&rcc STM32_SRC_PLL1_Q FDCAN1_SEL(1)>;
// 	pinctrl-0 = <&fdcan2_rx_pb12 &fdcan2_tx_pb13>;
// 	pinctrl-names = "default";
// 	bus-speed = <125000>;
// 	bus-speed-data = <1000000>;
// 	status = "okay";
// };